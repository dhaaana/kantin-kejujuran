import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import React from 'react';
import { collection, FieldValue, getDocs, Timestamp } from 'firebase/firestore';
import { db } from '../lib/firebase';
import TambahItem from '../components/store/TambahItem';
import Toast from '../components/utilities/Toast';

export interface IItemData {
  item_id: string;
  item_name: string;
  item_description: string;
  item_price: number;
  item_img: string;
  item_created_at: Timestamp;
}

const Home: NextPage = () => {
  const [items, setItems] = React.useState<IItemData[]>([]);
  const [isLoading, setIsLoading] = React.useState<boolean>(true);
  const [fetchToggle, setFetchToggle] = React.useState<boolean>(true);

  const getAllItem = async () => {
    setIsLoading(true);
    const querySnapshot = await getDocs(collection(db, 'items'));
    querySnapshot.forEach((doc) => {
      setItems((prev) => {
        const arr = [...prev];
        const newItem = { ...doc.data(), item_id: doc.id };
        if (!arr.some((data) => data.item_id === doc.id)) {
          arr.push(newItem as IItemData);
        }
        return arr;
      });
    });
    setIsLoading(false);
  };

  const toggleRefetch = () => {
    setFetchToggle((prev) => !prev);
  };

  React.useEffect(() => {
    getAllItem();
  }, [fetchToggle]);

  return (
    <>
      <Head>
        <title>Kantin Kejujuran</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Toast isLoading={isLoading} />
      <div className='bg-purple-50 flex flex-col items-center justify-center min-h-screen py-20'>
        <div className='flex gap-x-10 items-center justify-between mx-20 w-full'>
          <span className='w-1/3'></span>
          <div className='text-center w-1/3'>
            <h1>Kantin Kejujuran</h1>
            <h4>SD SEA Sentosa</h4>
          </div>
          <div className='text-center w-1/3'>
            <TambahItem toggleRefetch={toggleRefetch} />
          </div>
        </div>
        <div className='min-h-[20rem] mx-20 my-10'>
          <div className='flex flex-wrap gap-3 justify-center'>
            {isLoading
              ? [0, 1, 2].map((i) => {
                  return (
                    <span
                      key={i}
                      className='animate-pulse bg-gradient-to-b from-slate-200 h-60 rounded-md to-purple-50 w-80'
                    ></span>
                  );
                })
              : items.map(
                  (
                    {
                      item_name,
                      item_description,
                      item_price,
                      item_created_at,
                      item_img,
                    },
                    i
                  ) => {
                    return (
                      <div
                        key={i}
                        className='bg-white flex flex-col max-w-xs p-5 rounded-md shadow w-[20rem]'
                      >
                        <div className='h-40 mb-3 overflow-hidden relative rounded'>
                          <Image
                            src={item_img}
                            alt='item'
                            layout='fill'
                            objectFit='cover'
                          />
                          <h3 className='absolute bg-purple-100 font-semibold px-2.5 py-0.5 right-2 rounded text-purple-800 top-2'>
                            Rp.{item_price}
                          </h3>
                        </div>
                        <h4>{item_name}</h4>
                        <p className='text-gray-500'>{item_description}</p>
                        <div className='flex grow items-end justify-between mt-3'>
                          <div>
                            <p className='text-gray-500 text-xs'>
                              Dibuat{' '}
                              {item_created_at
                                .toDate()
                                .toLocaleString('ID-id', {
                                  day: 'numeric',
                                  month: 'long',
                                  year: 'numeric',
                                })}
                            </p>
                          </div>
                          <button className='bg-purple-700 font-medium px-5 py-1.5 rounded-md text-sm text-white hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 active:animate-wiggle'>
                            Beli
                          </button>
                        </div>
                      </div>
                    );
                  }
                )}
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
